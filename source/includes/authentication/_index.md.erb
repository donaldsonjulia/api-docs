# Authentication

Access to resources in the Tuition.io API requires a valid API Key and an authentication token.

Tuition.io expects your unique, public API key to be included in the `x-api-key` request header:

`x-api-key: API_KEY`

To authenticate requests, the Tuition.io API expects an authentication token to be sent in the `tio-auth-token` request header:

`tio-auth-token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE2MDk4ODM4NTMsImV4cCI6MTYwOTg4NzQ3NiwiaXNzIjoiRXhhbXBsZSBDb21wYW55LCBMTEMifQ.BcfVGaT_0up7wTgOhXDl49RTCQeydDnPt_r8XUJjADLxGXDoLCjuxwb5_fBb1EKQZPSz6TAwgYiOcfdXFLxglw`

## Build Your Own Token

```shell
#!/usr/bin/env bash
jwt_header=$(echo -n '{"alg":"HS512"}' | base64 | sed s/\+/-/g | sed 's/\//_/g' | sed -E s/=+$//)
payload=$(echo -n '{"iat":1609883853,"exp":1609887476,"iss":"Example Company, LLC"}' | base64 | sed s/\+/-/g |sed 's/\//_/g' |  sed -E s/=+$//)
secret='purrrrrfectt'
hmac_signature=$(echo -n "${jwt_header}.${payload}" |  openssl sha512 -hmac "$secret" -binary | base64 | sed s/\+/-/g | sed 's/\//_/g' | sed -E s/=+$//)
jwt="${jwt_header}.${payload}.${hmac_signature}"

echo ${jwt}
```

```ruby
# Using the Ruby JWT Gem: [https://github.com/jwt/ruby-jwt]

claims = {
  iat: 1609883853, # required
  exp: 1609887476, # required
  iss: 'Example Company, LLC' # optional
}

token = JWT.encode(claims, 'purrrrrfectt', 'HS512')
```

> Note: These examples use fixed timestamps<br>
> Make sure to replace `purrrrrfectt` with your API Key secret.

The authentication token is a [JWT](http://jwt.io) encoded with the `HS512` algorithm and "signed" with the "secret" component of your API Key.

For example, Tuition.io provides you with the following API Key details:

Attribute Name | Value
-------------- | -------------
`key`          | `xNTE2MjM5MDI`
`secret`       | `purrrrrfectt`

You might build your own authentication token with the code shown here.

JWT encoding libraries are available for most languages. Learn more at [jwt.io](http://jwt.io).

## Supported JWT Claims

Currently, the only required JWT claims are the "issued at" and "expiration" time stamps: `iat` and `exp`.

Parameter | Required | Description
--------- | ------- | -----------
`iat` | YES | The time the JWT was computed in seconds since epoch. The Tuition.io API does not allow JWTs older than 1 year of age or issued in the future. Setting `iat` to the current timestamp should work in most cases.
`exp` | YES | The time the JWT will expire. The Tuition.io API will reject requests with expired JWTs. For security, we recommend JWTs that expire after a few minutes. But the API allows JWTs up to 1 year old.
`iss` | no | Something to identify you as the issuer of the token.

## Request Headers Example

```shell
curl -X GET "<%= config[:base_url] %>/employees" \
    -H "x-api-key: xNTE2MjM5MDI" \
    -H "tio-auth-token: eyJhbGciOiJIUzUxMiJ9.eyJpYXQiOjE2MDk4ODM4NTMsImV4cCI6MTYwOTg4NzQ3NiwiaXNzIjoiRXhhbXBsZSBDb21wYW55LCBMTEMifQ.BcfVGaT_0up7wTgOhXDl49RTCQeydDnPt_r8XUJjADLxGXDoLCjuxwb5_fBb1EKQZPSz6TAwgYiOcfdXFLxglw"
```

<aside class="notice">
  <br>
  Remember to substitute "<%= config[:base_url] %>" for the Tuition.io API<br>
  You must replace <code>xNTE2MjM5MDI</code> with your API key.<br>
  Send the authentication token (JWT) you generate and sign with your secret in the "tio-auth-token" header.
</aside>
